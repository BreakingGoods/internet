async function fetchSchedule() {
    try {
        const response = await fetch(`http://localhost:3000/data/Schedule_time`);
        const scheduleData = await response.json();

        const dayMapping = {
            '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå': 1,
            '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£': 2,
            '‡∏û‡∏∏‡∏ò': 3,
            '‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ': 4,
            '‡∏®‡∏∏‡∏Å‡∏£‡πå': 5,
            '‡πÄ‡∏™‡∏≤‡∏£‡πå': 6,
            '‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå': 7
        };

        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        for (let i = 1; i <= 7; i++) {
            for (let j = 2; j <= 14; j++) {  // ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà 2 (08:00 ‡∏ô.)
                const cell = document.querySelector(`tbody tr:nth-child(${i}) td:nth-child(${j})`);
                if (cell) {
                    cell.classList.add('status-cell');
                    cell.setAttribute('data-status', '‡∏ß‡πà‡∏≤‡∏á');  // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏á
                    updateCellAppearance(cell);

                    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                    cell.addEventListener('click', () => changeStatus(cell));
                }
            }
        }

        // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        let roomsFilter = '';

        if (window.location.pathname.includes('Schedule307.html')) {
            roomsFilter = '307';
        } else if (window.location.pathname.includes('Schedule308.html')) {
            roomsFilter = '308';
        } else if(window.location.pathname.includes('Schedule414.html')){
            roomsFilter = '414';
        } else if(window.location.pathname.includes('Schedule407.html')){
            roomsFilter = '407';
        } else if(window.location.pathname.includes('Schedule411.html')){
            roomsFilter = '411';
        } else if(window.location.pathname.includes('Schedule415.html')){
            roomsFilter = '415';
        } else if(window.location.pathname.includes('Schedule314.html')){
            roomsFilter = '314';
        } else if(window.location.pathname.includes('Schedule313-1.html')){
            roomsFilter = '313-1';
        } else if(window.location.pathname.includes('Schedule313.html')){
            roomsFilter = '313';
        } else if(window.location.pathname.includes('Schedule211.html')){
            roomsFilter = '211';
        } else if(window.location.pathname.includes('Schedule212.html')){
            roomsFilter = '212';
        } else if(window.location.pathname.includes('Schedule311.html')){
            roomsFilter = '311';
        }

        // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        scheduleData
            .filter(item => item.Rooms_ID === roomsFilter)
            .forEach(item => {
                const dayIndex = dayMapping[item.Week_days];
                const startHour = parseInt(item.Start_time.split(':')[0], 10);
                const endHour = parseInt(item.End_time.split(':')[0], 10);

                for (let hour = startHour; hour < endHour; hour++) {
                    const cell = document.querySelector(`tbody tr:nth-child(${dayIndex}) td:nth-child(${hour - 8 + 2})`);
                    if (cell) {
                        cell.setAttribute('data-status', item.Rooms_status);
                        cell.setAttribute('data-id', item.Schedule_ID); // ‡πÉ‡∏™‡πà Schedule_ID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                        updateCellAppearance(cell);
                    }
                }
            });
    } catch (error) {
        console.error('‚ùå Error fetching schedule:', error);
    }
}

// üõ†Ô∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
async function changeStatus(cell) {
    const statuses = ['‡∏ß‡πà‡∏≤‡∏á', '‡∏°‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô', '‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á', '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á'];
    let currentStatus = cell.getAttribute('data-status');
    let nextStatus = statuses[(statuses.indexOf(currentStatus) + 1) % statuses.length]; // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞

    cell.setAttribute('data-status', nextStatus);
    updateCellAppearance(cell); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI

    try {
        const scheduleId = cell.getAttribute('data-id');
        if (scheduleId) {
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ Schedule_ID
            const response = await fetch('http://localhost:3000/updateScheduleStatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    scheduleId: scheduleId,
                    status: nextStatus
                }),
            });

            if (response.ok) {
                console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "${nextStatus}" ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
            } else {
                console.error('‚ùå Error updating status');
                alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞');
            }
        } else {
            console.log('üìù ‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ß‡πà‡∏≤‡∏á ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        }
    } catch (error) {
        console.error('‚ùå Error:', error);
        alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ');
    }
}

// üé® ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï UI ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
function updateCellAppearance(cell) {
    const status = cell.getAttribute('data-status');
    cell.className = 'status-cell'; // ‡∏•‡πâ‡∏≤‡∏á class ‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô
    switch (status) {
        case '‡∏°‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô':
            cell.classList.add('status-occupied');
            cell.textContent = 'üìö ‡∏°‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏ô';
            break;
        case '‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á':
            cell.classList.add('status-unavailable');
            cell.textContent = 'üö´ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á';
            break;
        case '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á':
            cell.classList.add('status-maintenance');
            cell.textContent = 'üîß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á';
            break;
        case '‡∏ß‡πà‡∏≤‡∏á':
            cell.classList.add('status-available');
            cell.textContent = '';
            break;
        default:
            cell.textContent = '-';
    }
}

document.addEventListener('DOMContentLoaded', fetchSchedule);