document.addEventListener("DOMContentLoaded", () => {
  fetchUserInfo();
  fetchRoomStatus();
  fetchRoomTypeIcon();
  attachRoomClickEvents();
});

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
async function fetchUserInfo() {
  try {
    console.log("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô...");
    const response = await fetch("http://localhost:3000/session", {
      method: "GET",
      credentials: "include"
    });

    if (!response.ok) {
      throw new Error("Session expired");
    }

    const userSession = await response.json();
    console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API:", userSession);

    if (userSession && userSession.data) {
      if (userSession.role === "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï") {
        sessionUserId = userSession.data.student_id;
        sessionRole = "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï";
      } else if (userSession.role === "‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå") {
        sessionUserId = userSession.data.teacher_id;  // ‚úÖ ‡πÉ‡∏ä‡πâ teacher_id
        sessionRole = "‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå";
      } else {
        alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏î‡πâ");
        window.location.href = "login.html";
      }
    } else {
      alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
      window.location.href = "login.html";
    }
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô:", error);
    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
    window.location.href = "login.html";
  }
}

async function logout() {
  try {
    const response = await fetch("http://localhost:3000/logout", {
      method: "POST",
      credentials: "include",
    });

    if (!response.ok) throw new Error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö");

    alert("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    redirectToLogin();
  } catch (error) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ:", error);
    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
  }
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ login.html
function redirectToLogin() {
  window.location.href = "login.html";
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
function updateUserName(name) {
  const userNameElement = document.getElementById("user-name");
  if (userNameElement) {
    userNameElement.textContent = name || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠";
  }
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏ô‡∏ö event ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
function attachRoomClickEvents() {
  document.addEventListener("click", (event) => {
    const roomElement = event.target.closest(".room"); // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà .room ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (!roomElement) return;

    const roomName = roomElement.dataset.room; // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ room ‡∏à‡∏≤‡∏Å data-room
    if (!roomName) return;

    localStorage.setItem("selectedRoom", roomName);
    window.location.href = `Schedule.html?room=${encodeURIComponent(roomName)}`;
  });
}

// ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
window.addEventListener("DOMContentLoaded", async () => {
  // try {
  //   const res = await fetch("http://localhost:3000/getRoomStatus");
  //   const rooms = await res.json();

  //   const roomElements = document.querySelectorAll(".room");

  //   roomElements.forEach((el) => {
  //     const roomName = el.textContent.trim().replace(/\s/g, "");
  //     const match = rooms.find(
  //       (r) => r.room_name.replace(/\s/g, "") === roomName
  //     );

  //     if (match) {
  //       // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå class ‡πÄ‡∏î‡∏¥‡∏°‡∏Å‡πà‡∏≠‡∏ô
  //       el.classList.remove("available", "disabled-room", "no-data");

  //       if (match.room_status === "‡∏ß‡πà‡∏≤‡∏á") {
  //         el.classList.add("available");
  //         const status = document.createElement("div");
  //         status.classList.add("status-label");
  //         status.textContent = "‡∏ß‡πà‡∏≤‡∏á";
  //         el.appendChild(status);
  //       } else {
  //         el.classList.add("disabled-room");
  //         const status = document.createElement("div");
  //         status.classList.add("status-label");
  //         status.textContent = "‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á";
  //         el.appendChild(status);
  //       }
  //     } else {
  //       // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÉ‡∏´‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  //       el.classList.add("no-data");
  //     }
  //   });
  // } catch (err) {
  //   console.error("‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", err);
  // }
});

// ‚úÖ ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
async function fetchRoomStatus() {
  try {
    const response = await fetch("http://localhost:3000/rooms");
    if (!response.ok) throw new Error("Failed to fetch room data");

    const rooms = await response.json();
    console.log("‚úÖ ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤:", rooms);

    const allRoomElements = document.querySelectorAll(".room");

    allRoomElements.forEach(roomElement => {
      const roomId = roomElement.dataset.room;
      if (!roomId) return;

      const roomData = rooms.find((r) => r.room_id === roomId);
      if (!roomData) return;

      let statusElement = roomElement.querySelector(".status");
      if (!statusElement) {
        statusElement = document.createElement("div");
        statusElement.classList.add("status");
        roomElement.appendChild(statusElement);
      }


      if (roomData.room_status.trim() === "‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô") {
        statusElement.textContent = "‡∏ß‡πà‡∏≤‡∏á";
        statusElement.classList.remove("not");
        roomElement.style.backgroundColor = "#8e8e8e";
        roomElement.classList.add("available");
        roomElement.classList.remove("disabled-room", "no-data");
        roomElement.style.cursor = "pointer";
      } else {
        statusElement.textContent = "‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á";
        statusElement.classList.add("not");
        roomElement.classList.add("disabled-room");
        roomElement.classList.remove("available", "no-data");
        roomElement.style.backgroundColor = "#8e8e8e";
        roomElement.style.cursor = "not-allowed";

      }
      
      
    });

  } catch (error) {
    console.error("‚ùå Error loading room status:", error);
  }
}



// ‚úÖ ‡∏î‡∏∂‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á
async function fetchRoomTypeIcon() {
  try {
    const response = await fetch("http://localhost:3000/roomdetail");
    if (!response.ok) throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• room type ‡πÑ‡∏î‡πâ");

    const rooms = await response.json();
    console.log("üì¶ Room type data:", rooms);

    const typeIcons = {
      "‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏Ñ‡πÄ‡∏ä‡∏≠‡∏£‡πå": "fas fa-chalkboard-teacher",
      "‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£": "fas fa-laptop-code",
      "‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏é‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£": "fas fa-laptop-code", // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏∞‡∏Å‡∏î‡∏ú‡∏¥‡∏î‡∏î‡πâ‡∏ß‡∏¢
      "co-working space": "fas fa-users",
      "studio room": "fas fa-video",
      "‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡πâ‡∏ô‡∏Ñ‡∏ß‡πâ‡∏≤": "fas fa-book"
    };

    rooms.forEach((room) => {
      const roomId = room.room_id?.trim();  // ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á
      const normalizedType = room.room_type?.trim().toLowerCase();

      const roomElement = document.querySelector(`.room[data-room="${roomId}"]`);
      const iconClass = typeIcons[normalizedType];

      if (roomElement && iconClass) {
        const icon = document.createElement("i");
        icon.className = `${iconClass} room-type-icon`;
        roomElement.classList.add("has-icon");
        roomElement.appendChild(icon);
      } else {
        console.warn("‚õî ‡πÑ‡∏°‡πà‡∏û‡∏ö room ‡∏´‡∏£‡∏∑‡∏≠ icon:", roomId, room.room_type);
      }
    });

  } catch (err) {
    console.error("‚ùå Failed to load room type icons:", err);
  }
}


