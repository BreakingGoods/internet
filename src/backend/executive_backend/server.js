const express = require('express');
const connection = require('./db'); // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
const mysql = require('mysql2');
const cors = require('cors');  // ‡πÄ‡∏û‡∏¥‡πà‡∏° cors


const app = express();
app.use(express.json()); // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö JSON request body
app.use(cors());
// üìå ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô `rooms` ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì)
app.get('/rooms', (req, res) => {
    connection.query('SELECT * FROM Equipments_list_brokened', (err, results) => {
        if (err) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', results);
        res.json(results);
    });
});
app.get('/brokendEquipment', (req, res) => {
    connection.query('SELECT b.Equipments_ID, (SELECT Equipments_name FROM Equipments_list_information WHERE Equipments_ID = b.Equipments_ID) AS Equipments_name, COUNT(*) AS count FROM Equipments_list_brokened b GROUP BY b.Equipments_ID ORDER BY count DESC LIMIT 3;', (err, results) => {
        if (err) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', results);
        res.json(results);
    });
});
app.get('/borrowEquipment', (req, res) => {
    connection.query('SELECT b.Equipments_ID, (SELECT Equipments_name FROM Equipments_list_information WHERE Equipments_ID = b.Equipments_ID) AS Equipments_name, COUNT(*) AS count FROM Equipments_list_requests b GROUP BY Equipments_ID ORDER BY count DESC LIMIT 3;', (err, results) => {
        if (err) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', results);
        res.json(results);
    });
});
app.get('/mostroomalldata', (req, res) => {
    const query ="SELECT rlr.Rooms_ID AS room,rlr.Identify_ID AS id,SUM(CASE WHEN si.Department = '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå' THEN 1 ELSE 0 END) AS cs,SUM(CASE WHEN si.Department = '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®' THEN 1 ELSE 0 END) AS it, COUNT(*) AS count FROM Rooms_list_requests rlr LEFT JOIN Student_information si ON rlr.Identify_ID = si.Student_ID GROUP BY rlr.Rooms_ID, rlr.Identify_ID;"
    connection.query( query,(err, results) => {
        if (err) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', results);
        res.json(results);
    });
});
app.get('/daysroom', (req, res) => {
    const query ="SELECT rlr.Rooms_ID AS room,rlr.Identify_ID AS id,SUM(CASE WHEN si.Department = '‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå' THEN 1 ELSE 0 END) AS cs,SUM(CASE WHEN si.Department = '‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®' THEN 1 ELSE 0 END) AS it,COUNT(*) AS count,CASE WHEN DAYOFWEEK(rlr.Used_Date) = 1 THEN '‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå'WHEN DAYOFWEEK(rlr.Used_Date) = 2 THEN '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå'WHEN DAYOFWEEK(rlr.Used_Date) = 3 THEN '‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£'WHEN DAYOFWEEK(rlr.Used_Date) = 4 THEN '‡∏û‡∏∏‡∏ò'WHEN DAYOFWEEK(rlr.Used_Date) = 5 THEN '‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ'WHEN DAYOFWEEK(rlr.Used_Date) = 6 THEN '‡∏®‡∏∏‡∏Å‡∏£‡πå'WHEN DAYOFWEEK(rlr.Used_Date) = 7 THEN '‡πÄ‡∏™‡∏≤‡∏£‡πå' END AS day_of_week FROM Rooms_list_requests rlr LEFT JOIN Student_information si ON rlr.Identify_ID = si.Student_ID GROUP BY   rlr.Rooms_ID, rlr.Identify_ID, day_of_week;"
    connection.query( query,(err, results) => {
        if (err) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', results);
        res.json(results);
    });
});
app.get('/useralldata', (req, res) => {
    const query ="SELECT si.Name, si.Student_ID,si.Phone_number,si.email, COUNT(rlr.Identify_ID) AS Status FROM Rooms_list_requests rlr JOIN Student_information si ON rlr.Identify_ID = si.Student_ID GROUP BY si.Student_ID ORDER BY Status DESC LIMIT 3;"
    connection.query( query,(err, results) => {
        if (err) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', results);
        res.json(results);
    });
});

<<<<<<< HEAD
app.get('/Rooms_list_requests', (req, res) => {
    connection.query('SELECT * FROM Rooms_list_requests', (err, results) => {
        if (err) {
            console.error('‚ùå Error:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏≤‡∏Å Rooms_list_requests:', results);
        res.json(results);
    });
});


app.get('/data/Student_information', (req, res) => {
    connection.query('SELECT * FROM Student_information', (err, results) => {
        if (err) {
            console.error('‚ùå Error:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏≤‡∏Å Student_information:', results);
        res.json(results);
    });
});

app.get('/data/Teacher_information', (req, res) => {
    connection.query('SELECT * FROM Teacher_information', (err, results) => {
        if (err) {
            console.error('‚ùå Error:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏≤‡∏Å Teacher_information:', results);
        res.json(results);
    });
});



=======
app.get('/user', (req, res) => {
    const query ="SELECT si.Name, si.Student_ID,si.Phone_number,si.email, COUNT(rlr.Identify_ID) AS Status FROM Rooms_list_requests rlr JOIN Student_information si ON rlr.Identify_ID = si.Student_ID GROUP BY si.Student_ID ORDER BY Status DESC ;"
    connection.query( query,(err, results) => {
        if (err) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
            res.status(500).send(err);
            return;
        }
        console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', results);
        res.json(results);
    });
});
>>>>>>> 3ed069ff9a39f3ced66a1dba98b92ce556c41eab
// üìå ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`üöÄ Server running at http://localhost:${PORT}`);
});